version: "3"

networks:
  loadbalancer0:
    driver: "bridge"

volumes:
  nginx_:
  vhost_:
  certs_:
  letsencrypt_:

services:

  lb_nginx:
    image: nginx:1.13-alpine
    container_name: lb_nginx
    restart: unless-stopped
    labels:
        com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    expose:
      - "80"
      - "443"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - loadbalancer0
    volumes:
      - vhost_:/etc/nginx/vhost.d
      - nginx_:/etc/nginx/conf.d
      - letsencrypt_:/usr/share/nginx/html
      - certs_:/etc/nginx/certs

  lb_dockergen: 
    build: images/dockergen
    container_name: lb_dockergen
    restart: unless-stopped
    command: -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    networks:
      - loadbalancer0
    volumes:
      - vhost_:/etc/nginx/vhost.d
      - nginx_:/etc/nginx/conf.d
      - letsencrypt_:/usr/share/nginx/html
      - certs_:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro

  lb_letsencrypt:
    depends_on:
      - lb_nginx
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: lb_letsencrypt
    restart: unless-stopped
    networks:
      - loadbalancer0
    volumes:
      - vhost_:/etc/nginx/vhost.d
      - nginx_:/etc/nginx/conf.d
      - letsencrypt_:/usr/share/nginx/html
      - certs_:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=lb_dockergen
      - NGINX_PROXY_CONTAINER=lb_nginx
