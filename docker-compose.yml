version: "3"

networks:
  tier_0:
    driver: "bridge"
    ipam:
      config:
        - subnet: 172.16.0.0/12
        - gateway: 172.16.0.1
  tier_1:
    driver: "bridge"
    ipam:
      config:
        - subnet: 172.17.0.0/12
        - gateway: 172.17.0.1

volumes:
  nginx_:
  vhost_:
  certs_:
  letsencrypt_:

services:

  nginx:
    image: nginx:1.13-alpine
    container_name: nginx
    restart: unless-stopped
    labels:
        com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - tier_0
      - tier_1
    volumes:
      - vhost_:/etc/nginx/vhost.d
      - nginx_:/etc/nginx/conf.d
      - letsencrypt_:/usr/share/nginx/html
      - certs_:/etc/nginx/certs:ro

  dockergen: 
    build: images/dockergen
    container_name: dockergen
    restart: unless-stopped
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    networks:
      - tier_1
    volumes:
      - vhost_:/etc/nginx/vhost.d
      - nginx_:/etc/nginx/conf.d
      - letsencrypt_:/usr/share/nginx/html
      - certs_:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro

  letsencrypt:
    depends_on:
      - nginx
      - dockergen
    build: images/letsencrypt
    container_name: letsencrypt
    restart: unless-stopped
    networks:
      - tier_0
      - tier_1
    volumes:
      - vhost_:/etc/nginx/vhost.d
      - nginx_:/etc/nginx/conf.d
      - letsencrypt_:/usr/share/nginx/html
      - certs_:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=dockergen
      - NGINX_PROXY_CONTAINER=nginx
